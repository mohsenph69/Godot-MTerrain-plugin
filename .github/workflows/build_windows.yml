name: Build Windows
on:
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    env:
      SCONS_CACHE: ${{github.workspace}}/.scons-cache/

    strategy:
      fail-fast: false
      matrix:
        include:
          - precision: single
            arch: x86_32
            opencl_arch: x64
            target-type: template_debug
            platform: windows
          - precision: single
            arch: x86_32
            opencl_arch: x64
            target-type: template_release
            platform: windows
          - precision: single
            arch: x86_64
            opencl_arch: x64
            target-type: template_debug
            platform: windows
          - precision: single
            arch: x86_64
            opencl_arch: x64
            target-type: template_release
            platform: windows

    # Taken mostly from https://github.com/godotengine/godot-cpp-template/blob/main/.github/workflows/builds.yml
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      # Setup dependencies
      - name: Setup godot-cpp
        uses: ./gdextension/godot-cpp/.github/actions/setup-godot-cpp
        with:
          platform: ${{ matrix.platform }}
          em-version: 3.1.62

      # Build GDExtension (with caches)
      - name: Cache .scons_cache
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/.scons-cache/
          key: ${{ matrix.platform }}_${{ matrix.arch }}_${{ matrix.precision }}_${{ matrix.target-type }}_cache

      - name: Build GDExtension
        shell: sh
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons-cache/
        run: |
          cd gdextension
          scons target=${{ matrix.target-type }} platform=${{ matrix.platform }} arch=${{ matrix.arch }} precision=${{ matrix.precision }}
          cd ..
          mv libs/MTerrain.windows.${{ matrix.target-type }}.${{ matrix.arch }}.dll libs/libMTerrain.windows.${{ matrix.target-type }}.${{ matrix.arch }}.dll

      # Upload the build
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: libmterrain-${{ matrix.platform }}-${{ matrix.arch }}-${{ matrix.precision }}-${{ matrix.target-type }}
          path: libs/*.dll
          if-no-files-found: error